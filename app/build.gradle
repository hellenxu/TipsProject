apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    signingConfigs {

    }

    defaultConfig {
        applicationId "com.six.tipsproject"
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName
        manifestPlaceholders = [APP_TAG: 'release']
        buildConfigField "String", "EMAIL", "\"release@six.ca\""
        resValue "string", "res_sample", "hello world"
        resConfigs "en"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }
        debug {
//            signingConfig signingConfigs.debug
        }
    }
//    productFlavors{
//        google {
//            manifestPlaceholders = [APP_TAG: 'google']
//        }
//        anzhi {
//            manifestPlaceholders = [APP_TAG: 'anzhi']
//        }
//    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile rootProject.ext.dependencies["junit"]
    compile rootProject.ext.dependencies["appcompat-v7"]
    compile 'ca.six.util:LogUtil:1.0.1'
    compile 'com.android.support:recyclerview-v7:23.3.0'
}

//task checkSignInfo {
//    File propFile = project.rootProject.file('local.properties');
//    if(propFile.exists() && propFile.canRead()){
//        println("loading signing configuration...")
//        def Properties properties = new Properties()
//        properties.load(new FileInputStream(propFile))
//
//        if(properties.containsKey('RELEASE_STORE_FILE')
//                && properties.containsKey('RELEASE_STORE_PASSWORD')
//                && properties.containsKey('RELEASE_KEY_ALIAS')
//                && properties.containsKey('RELEASE_KEY_PASSWORD')){
//            android.signingConfigs.release.storeFile = file(properties['RELEASE_STORE_FILE'])
//            android.signingConfigs.release.storePassword = properties['RELEASE_STORE_PASSWORD']
//            android.signingConfigs.release.keyAlias = properties['RELEASE_KEY_ALIAS']
//            android.signingConfigs.release.keyPassword = properties['RELEASE_KEY_PASSWORD']
//        } else {
//            android.buildTypes.release.signingConfig = null
//            println('signing config found but some entries are missing.')
//        }
//    } else {
//        android.buildTypes.release.signingConfig = null
//        println('signing config not found')
//    }
//}
//assembleRelease.dependsOn checkSignInfo
//assembleAndroidTest.dependsOn checkSignInfo
