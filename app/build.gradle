apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    Properties properties = new Properties()
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
    signingConfigs {

    }

    defaultConfig {
//        applicationId "com.six.tipsproject"
//        minSdkVersion rootProject.ext.android.minSdkVersion
//        targetSdkVersion rootProject.ext.android.targetSdkVersion
//        versionCode rootProject.ext.android.versionCode
//        versionName rootProject.ext.android.versionName
//        manifestPlaceholders = [APP_TAG: 'release']
//        buildConfigField "String", "EMAIL", "\"release@six.ca\""
//        resValue "string", "res_sample", "hello world"
//        resConfigs "en"

        applicationId "com.six.tipsproject"
        minSdkVersion 18
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        manifestPlaceholders = [APP_TAG: 'release']
        buildConfigField "String", "EMAIL", "\"release@six.ca\""
        resValue "string", "res_sample", "hello world"
        resConfigs "en"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.release
        }
        debug {
//            signingConfig signingConfigs.debug
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    // flavorDimensions Sample
//    flavorDimensions "prod","isLogo"
//
//    productFlavors{
//        google {
//            dimension "prod"
////            manifestPlaceholders = [APP_TAG: 'google']
//        }
//        anzhi {
//            dimension "prod"
////            manifestPlaceholders = [APP_TAG: 'anzhi']
//        }
//
//        xm {
//            dimension "prod"
//        }
//
//        need {
//            dimension "isLogo"
//        }
//
//        noneed {
//            dimension "isLogo"
//        }
//    }
//
//    variantFilter { variant ->
//        def names = variant.flavors*.name
//        println(names)
//        if(!names.contains("xm")&& names.contains("noneed")){
//            variant.ignore = true
//        }
//    }

    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile rootProject.ext.dependencies["appcompat-v7"]
    compile 'ca.six.util:LogUtil:1.0.1'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'com.android.support:recyclerview-v7:24.2.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'com.android.support:design:24.2.0'
    compile 'ca.six.util:Permisssion6:1.0.1'
    //Testing dependencies
    testCompile rootProject.ext.dependencies["junit"]
    testCompile 'org.mockito:mockito-core:1.10.19'
    testCompile 'junit:junit:4.12'
    testCompile 'org.robolectric:robolectric:3.1.2'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.4-beta2'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.4-beta2'
    //PowerMock
    testCompile 'org.powermock:powermock-module-junit4:1.6.5'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.5'
    testCompile 'org.powermock:powermock-api-mockito:1.6.5'
    testCompile 'org.powermock:powermock-classloading-xstream:1.6.5'
}
repositories {
    mavenCentral()
}

//task checkSignInfo {
//    File propFile = project.rootProject.file('local.properties');
//    if(propFile.exists() && propFile.canRead()){
//        println("loading signing configuration...")
//        def Properties properties = new Properties()
//        properties.load(new FileInputStream(propFile))
//
//        if(properties.containsKey('RELEASE_STORE_FILE')
//                && properties.containsKey('RELEASE_STORE_PASSWORD')
//                && properties.containsKey('RELEASE_KEY_ALIAS')
//                && properties.containsKey('RELEASE_KEY_PASSWORD')){
//            android.signingConfigs.release.storeFile = file(properties['RELEASE_STORE_FILE'])
//            android.signingConfigs.release.storePassword = properties['RELEASE_STORE_PASSWORD']
//            android.signingConfigs.release.keyAlias = properties['RELEASE_KEY_ALIAS']
//            android.signingConfigs.release.keyPassword = properties['RELEASE_KEY_PASSWORD']
//        } else {
//            android.buildTypes.release.signingConfig = null
//            println('signing config found but some entries are missing.')
//        }
//    } else {
//        android.buildTypes.release.signingConfig = null
//        println('signing config not found')
//    }
//}
//assembleRelease.dependsOn checkSignInfo
//assembleAndroidTest.dependsOn checkSignInfo
